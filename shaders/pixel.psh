// Pixel shader input structure
struct PS_INPUT
{
    float4 Position   : POSITION;
    float4 Diffuse    : COLOR0;
    float4 Specular   : COLOR1;
    float2 Texture    : TEXCOORD0;
};


// Pixel shader output structure
struct PS_OUTPUT
{
    float4 Color   : COLOR0;
};


// Global variables
sampler2D Tex0;


// Name: Main pixel shader used to render level geometry
// Type: Pixel shader
// Desc: Fetch texture and blend with constant color, then perform specular addition
//
PS_OUTPUT ps_main( in PS_INPUT In )
{
	PS_OUTPUT Out;                             // create an output pixel

	Out.Color = tex2D(Tex0, In.Texture) * In.Diffuse;
	
	// specular addition
	Out.Color += In.Specular;

	return Out;                                // return output pixel
}